/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}@font-face{font-family:OpenSans;src:url("../fontes/OpenSans-Regular.woff2") format("woff2"),url("../fontes/OpenSans-Regular.woff") format("woff"),url("../fontes/OpenSans-Regular.ttf") format("truetype")}@font-face{font-family:OpenSans-Bold;src:url("../fontes/OpenSans-Bold.woff2") format("woff2"),url("../fontes/OpenSans-Bold.woff") format("woff"),url("../fontes/OpenSans-Bold.ttf") format("truetype")}@font-face{font-family:Bungee;src:url("../fontes/Bungee-Regular.woff2") format("woff2"),url("../fontes/Bungee-Regular.woff") format("woff"),url("../fontes/Bungee-Regular.ttf") format("truetype")}@font-face{font-family:FrederickatheGreat;src:url("../fontes/FrederickatheGreat-Regular.woff2") format("woff2"),url("../fontes/FrederickatheGreat-Regular.woff") format("woff"),url("../fontes/FrederickatheGreat-Regular.ttf") format("truetype")}@font-face{font-family:EmblemaOne;src:url("../fontes/EmblemaOne-Regular.woff2") format("woff2"),url("../fontes/EmblemaOne-Regular.woff") format("woff"),url("../fontes/EmblemaOne-Regular.ttf") format("truetype")}.cf:after{content:" ";display:table;clear:both}.visuallyhidden,.screen-reader-only{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:1px}.visuallyhidden.focusable:active,.visuallyhidden.focusable:focus,.screen-reader-only.focusable:active,.screen-reader-only.focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;white-space:normal;width:auto}html{font-size:62.5%}body{font-size:16px;font-size:1.6rem;line-height:1.375;font-family:OpenSans,Arial,sans-serif;letter-spacing:0.05em}@media (min-width: 801px){body{line-height:1.5}}h1,.h1,h2,.h2{color:#fff}h1,.h1{font-size:36px;font-size:3.6rem;font-family:OpenSans-Bold,Arial,sans-serif}@media (min-width: 801px){h1,.h1{font-size:36px;font-size:3.6rem}}@media (min-width: 1500px){h1,.h1{font-size:42px;font-size:4.2rem}}h2,.h2{font-size:24px;font-size:2.4rem}@media (min-width: 801px){h2,.h2{font-size:24px;font-size:2.4rem}}@media (min-width: 1500px){h2,.h2{font-size:32px;font-size:3.2rem}}h3,.h3{font-size:20px;font-size:2rem;font-weight:600}@media (min-width: 801px){h3,.h3{font-size:20px;font-size:2rem}}@media (min-width: 1500px){h3,.h3{font-size:24px;font-size:2.4rem}}h4,.h4{font-size:16px;font-size:1.6rem}@media (min-width: 801px){h4,.h4{font-size:18px;font-size:1.8rem}}@media (min-width: 1500px){h4,.h4{font-size:22px;font-size:2.2rem}}.erreur{color:#941B0C}.erreurElement{border:1px solid #941B0C}.ok{color:#31CA72}fieldset{border:none;padding:0}body{background:url("../images/inspecteur_petit.svg") no-repeat 170% 30px/500px,radial-gradient(ellipse at center 25%, #BC3908, #621708 85%) fixed}body.inspecteur--anim{background:url("../images/inspecteur_petit.svg") no-repeat 130% 30px/500px,radial-gradient(ellipse at center 25%, #BC3908, #621708 85%) fixed}body.inspecteurIntro{background:url("../images/inspecteur.svg") no-repeat 100vw 200px/890px,radial-gradient(ellipse at center 25%, #BC3908, #621708 85%) fixed}body.inspecteurIntro--anim{background:url("../images/inspecteur.svg") no-repeat 60vw 200px/890px,radial-gradient(ellipse at center 25%, #BC3908, #621708 85%) fixed}body:before,body:after{content:'Instruments';position:absolute;z-index:-1;top:4rem;width:100%;height:100%;font-family:FrederickatheGreat,Arial,cursive;font-size:260px;font-size:26rem;opacity:.065}body:after{content:'Myst√®res';top:32rem;font-size:360px;font-size:36rem;-webkit-animation:animTexteArriere 90s linear both infinite;animation:animTexteArriere 90s linear both infinite;-webkit-animation-delay:2s;animation-delay:2s}body:before{animation:animTexteArriere 165s linear reverse both infinite}@-webkit-keyframes animTexteArriere{from{left:105%}to{left:-105%}}@keyframes animTexteArriere{from{left:105%}to{left:-105%}}:focus{outline:transparent}a{display:inline-block;transition:all .2s ease-in-out;text-decoration:none;color:inherit}a.disabled{pointer-events:none;cursor:default}ul{list-style:none;padding:0}img{max-width:100%;vertical-align:bottom}footer{color:#fff;padding-left:50px}footer p{margin:0}footer a{text-decoration:underline}footer a:hover,footer a:focus{color:#F6AA1C}.displayNone{display:none}@media (max-width: 801px){.tableOnly{display:none}}@media (min-width: 801px){.mobileOnly{display:none}}body{color:#220901;overflow-x:hidden}body.js{overflow:hidden}.transition{transition:all 0.7s cubic-bezier(0.43, 0, 0.17, 1.3)}body:not(.js){background:url("../images/inspecteur_petit.svg") no-repeat 130% 30px/500px,radial-gradient(ellipse at center 25%, #BC3908, #621708 85%) fixed}body:not(.js).inspecteurIntro{background:url("../images/inspecteur.svg") no-repeat 60vw 200px/890px,radial-gradient(ellipse at center 25%, #BC3908, #621708 85%) fixed}noscript{z-index:10;display:block;position:fixed;top:20px;right:0;left:0;margin:0 auto;border-radius:2px;width:50%;padding:13px 20px;line-height:1.75;background:#f2f2f2;box-shadow:4px 3px 11px rgba(0,0,0,0.2)}*{box-sizing:border-box}.conteneur{margin:0 auto;max-width:1200px}.gds__titre{border-bottom:3px solid #383838;text-align:left;padding-bottom:5px}.gds__sousTitre{border-bottom:1px solid #383838;text-align:left;padding-bottom:5px;padding-top:40px}.gds__description{font-size:16px;font-size:1.6rem}.gds__palette{display:flex;flex-wrap:wrap;justify-content:flex-start;list-style-type:none;padding:0}.gds__paletteItem{margin:5px 0;width:32.20339%}.gds__paletteCouleur{border:1px solid gray;width:50px;height:50px;margin-bottom:10px}.gds__paletteCouleur--blanc{background-color:#fff}.gds__paletteCouleur--jaune{background-color:#F6AA1C}.gds__paletteCouleur--orangeBrule{background-color:#BC3908}.gds__paletteCouleur--rouge{background-color:#941B0C}.gds__paletteCouleur--brun{background-color:#621708}.gds__paletteCouleur--terre{background-color:#220901}.gds__paletteCouleur--vert{background-color:#31CA72}.gds__style{width:100px;height:100px}.gds__flex{display:flex;flex-wrap:wrap;justify-content:flex-start}.gds__item{margin-right:5.26316%;width:47.36842%}@media (min-width: 801px){.gds__item{margin-right:1.69492%;width:32.20339%}.gds__item:nth-of-type(3){margin:0}}body:not(.js) .question{margin-bottom:14rem}body:not(.js) .boutonQ,body:not(.js) .resultats.inspecteurIntro,body:not(.js) .footer{display:none}.etape,.question__titre,.consignes,.enigme{color:#fff}.consignes{margin:0;font-size:20px;font-size:2rem}.mosaique,.enigme,.imageZoom{width:49.15254%}.etape{display:inline-block;width:265px;height:110px;padding:30px 40px;background:url("../images/bg_etape.svg") no-repeat 0 0/contain}.etape__no{font-family:OpenSans-Bold,Arial,sans-serif}.liste{margin-top:0;width:49.15254%;padding-left:6.77966%;font-size:20px;font-size:2rem}.liste__item{display:flex;margin-top:-10px}.liste__item:nth-of-type(even){margin-left:100px}.Q1 .liste{padding-left:3.38983%}.question__titre{max-width:77.9661%;font-family:OpenSans-Bold,Arial,sans-serif;font-size:36px;font-size:3.6rem}.question__flex{display:flex;align-items:center}.question__label{display:flex;flex-flow:row nowrap;align-items:center;cursor:pointer}.question__label_conteneur{display:block;overflow-x:hidden;padding:20px 20px 20px 0;transform:translateX(-25px)}.question__img{width:120px;border:10px solid #fff;border-radius:50%;z-index:1;background:#fff;box-shadow:4px 3px 11px rgba(0,0,0,0.2)}.question__tx{transition:all .4s ease-in-out;display:inline-block;border:10px solid #fff;border-radius:0 35px 35px 0;padding:10px 22px 10px 30px;background:linear-gradient(45deg, #F6AA1C 50%, #FFECCB 0);background-size:300%;background-position:right;z-index:0;box-shadow:4px 3px 8px rgba(0,0,0,0.25),inset 0 0 0 1px #F6AA1C}.question__label:hover .question__tx,.question__label:focus .question__tx{background-position:left;text-shadow:0 0 1px #220901}.question__input:checked ~ label{-webkit-animation:enfoncer .3s ease-in-out both;animation:enfoncer .3s ease-in-out both}.question__input:checked ~ label .question__tx{background-position:left;text-shadow:0 0 1px #220901}@-webkit-keyframes enfoncer{0%{transform:scale(1)}60%{transform:scale(0.95)}85%{transform:scale(1.05)}100%{transform:scale(1)}}@keyframes enfoncer{0%{transform:scale(1)}60%{transform:scale(0.95)}85%{transform:scale(1.05)}100%{transform:scale(1)}}.enigme{position:relative;height:480px;display:flex;flex-flow:column nowrap;justify-content:center}.enigme:after{content:'';position:absolute;top:20px;left:-110px;width:100%;height:480px;background:url("../images/inspecteur_ombre.svg") no-repeat 0 bottom/contain;z-index:-1}.enigme__tx{font-size:28px;font-size:2.8rem;color:#fff;text-shadow:0.5px 0.5px 0.5px #9e7f7f,1px 1px 1px #9e7f7f,1.5px 1.5px 1.5px #9e7f7f,1px 2px 1px #9e7f7f,1px 5px 3px rgba(16,16,16,0.4),1px 8px 5px rgba(16,16,16,0.2),1px 10px 8px rgba(16,16,16,0.2),1px 12px 20px rgba(16,16,16,0.4)}.enigme__tx_ligne{display:inline-block;width:100%;padding:20px 0;text-align:center}.Q2 .question__titre{margin-bottom:3rem}@-webkit-keyframes enigmeLigne{from{transform:translateX(-75px);opacity:0;-webkit-clip-path:polygon(0 0, 0 0, 0 100%, 0% 100%);clip-path:polygon(0 0, 0 0, 0 100%, 0% 100%)}to{transform:translateX(0);opacity:1;-webkit-clip-path:polygon(0 0, 100% 0, 100% 100%, 0% 100%);clip-path:polygon(0 0, 100% 0, 100% 100%, 0% 100%)}}@keyframes enigmeLigne{from{transform:translateX(-75px);opacity:0;-webkit-clip-path:polygon(0 0, 0 0, 0 100%, 0% 100%);clip-path:polygon(0 0, 0 0, 0 100%, 0% 100%)}to{transform:translateX(0);opacity:1;-webkit-clip-path:polygon(0 0, 100% 0, 100% 100%, 0% 100%);clip-path:polygon(0 0, 100% 0, 100% 100%, 0% 100%)}}.enigmeLigne--1{--delay: 0s}.enigmeLigne--2{--delay: .15s
  }.enigmeLigne--3{--delay: .3s}.enigmeLigne--4{--delay: .45s}.enigmeLigneIn{-webkit-animation:enigmeLigne 0.8s var(--delay) cubic-bezier(0.6, 0.01, 0.51, 1) both;animation:enigmeLigne 0.8s var(--delay) cubic-bezier(0.6, 0.01, 0.51, 1) both}.enigmeLigneOut{animation:enigmeLigne 0.8s var(--delay) cubic-bezier(0.6, 0.01, 0.51, 1) reverse both}@-webkit-keyframes enigmeImage{0%{-webkit-filter:blur(100px);filter:blur(100px);opacity:0}100%{-webkit-filter:blur(0);filter:blur(0);opacity:1}}@keyframes enigmeImage{0%{-webkit-filter:blur(100px);filter:blur(100px);opacity:0}100%{-webkit-filter:blur(0);filter:blur(0);opacity:1}}.enigmeImageIn:after{-webkit-animation:enigmeImage .8s ease-in-out both;animation:enigmeImage .8s ease-in-out both}.enigmeImageOut:after{animation:enigmeImage .7s ease-in-out reverse both}.imageZoom__conteneur{transition:all 0.25s cubic-bezier(0.43, 0, 0.17, 1.28);margin:0 auto;border:10px solid #fff;border-radius:2px;width:370px;overflow:hidden}.imageZoom__img{transition:all .2s ease-in-out}@-webkit-keyframes animeImage{from{transform:translateX(-100px);opacity:0}to{transform:translateX(0);opacity:1}}@keyframes animeImage{from{transform:translateX(-100px);opacity:0}to{transform:translateX(0);opacity:1}}.animeImageIn{-webkit-animation:enigmeLigne 0.8s cubic-bezier(0.6, 0.01, 0.51, 1) both;animation:enigmeLigne 0.8s cubic-bezier(0.6, 0.01, 0.51, 1) both}.animeImageOut{animation:enigmeLigne 0.8s cubic-bezier(0.6, 0.01, 0.51, 1) reverse both}body{margin:50px auto;padding:0 50px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
